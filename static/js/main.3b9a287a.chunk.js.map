{"version":3,"sources":["tab-group.js","Input/input-name.js","button.js","login.js","signup.js","tab-content.js","background.js","sidebar/sidebar.js","page/todo-list.js","page/home.js","page/profile.js","homepage/homepage.js","homepage/content.js","routerURL/routeURL.js","App.js","serviceWorker.js","index.js"],"names":["TabGroup","props","className","currentTab","changeTab","href","Input","title","type","name","required","autoComplete","value","onChange","Button","onClick","LoginView","state","email","password","input","this","setState","target","infor","logIn","alert","id","onChangeEmail","onChangePassword","submitForm","React","Component","SignupView","firstName","lastName","user","signUp","onChangeFirstName","onChangeLastName","onSignup","TabContent","history","useHistory","logged","push","log","BackGroundView","tab","users","newTab","console","SideBar","theme","mode","selectedKeys","selectedKey","sidebar","map","item","Item","slug","selectItem","Todo","Home","Profile","Header","Layout","Sider","Content","routes","path","exact","main","Homepage","collapsed","key","toString","style","minHeight","collapsible","onCollapse","margin","padding","route","index","children","RouterURL","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b9a287a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TabGroup(props) {\n    function openLoginTab() {\n        props.changeTab('login');\n    }\n\n    function openSignupTab() {\n        props.changeTab('signup');\n    }\n\n    return (\n        <ul className=\"tab-group\">\n            <li className=\"tab\" className={(props.currentTab === 'signup') ? 'active' : ''} onClick={openSignupTab}>\n                <a href=\"#signup\">Sign Up</a>\n            </li>\n            <li className=\"tab\" className={(props.currentTab === 'login') ? 'active' : ''} onClick={openLoginTab}>\n                <a href=\"#login\">Log In</a>\n            </li>\n        </ul>\n    );\n}\n\nexport default TabGroup;","import React from \"react\";\n\nfunction Input(props) {\n    return (\n        <div className=\"field-wrap\">\n            <label>\n                { props.title }<span className={props.className}>*</span>\n            </label>\n            <input type={props.type} name={props.name} \n            \trequired \n            \tautoComplete=\"off\" \n            \tvalue={props.value}\n            \tonChange={props.onChange}\n        \t/>\n        </div>\n    );\n}\n\nexport default Input;","import React from 'react';\n\nfunction Button(props) {\n    return (\n        <button type={props.type} className={props.className} onClick={props.onClick} >\n            {props.title}\n        </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport Input from './Input/input-name';\nimport Button from './button';\n\nclass LoginView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        }\n    }\n\n    onChangeEmail(input) {\n        this.setState({\n            email: input.target.value,\n        })\n    }\n\n    onChangePassword(input) {\n        this.setState({\n            password: input.target.value,\n        })\n    }\n\n    submitForm() {\n        if (this.state.email == '' || this.state.password == '') {\n            alert('Enter email and password');\n            return;\n        }\n        let infor = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.logIn(infor);\n\n    }\n\n    render(){\n        return (\n            <div id=\"login\">\n                <h1>Welcome Back!</h1>\n                <form>\n                    <Input type=\"email\" \n                        title=\"Email Address\" \n                        name=\"email\" \n                        value={this.state.email} \n                        className=\"req\" \n                        onChange={(input) => this.onChangeEmail(input)} />\n                    <Input type=\"password\" \n                        title=\"Password\" \n                        name=\"password\" \n                        className=\"req\" \n                        onChange={(input) => this.onChangePassword(input)} />\n                    <Button title=\"Login\" \n                        className=\"button button-block\" \n                        type=\"button\" \n                        onClick={() => this.submitForm()}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginView;\n","import React from 'react';\nimport Input from './Input/input-name';\nimport Button from './button';\n\nclass SignupView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            password: '',\n            email: ''\n        }\n    }\n\n    onChangeFirstName(input) {\n        this.setState({firstName: input.target.value});\n    }\n\n    onChangeLastName(input) {\n        this.setState({lastName: input.target.value});\n    }\n\n    onChangeEmail(input) {\n        this.setState({email: input.target.value});\n    }\n\n    onChangePassword(input) {\n        this.setState({password: input.target.value});\n    }\n\n    onSignup() {\n        let user = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        this.props.signUp(user);\n    }\n\n    render() {\n        return (\n            <div id=\"signup\">\n                <h1>Sign Up for Free</h1>\n                <form>\n                    <div className=\"top-row\">\n                        <Input title=\"First Name\" value={this.state.firstName} \n                            type=\"text\" className=\"req\" \n                            onChange={(input) => this.onChangeFirstName(input)}\n                        />\n                        <Input title=\"Last Name\" value={this.state.lastName} \n                            type=\"text\" className=\"req\" \n                            onChange={(input) => this.onChangeLastName(input)}\n                        />\n                    </div>\n                    <Input title=\"Email Address\" value={this.state.email} \n                        type=\"email\" className=\"req\" \n                        onChange={(input) => this.onChangeEmail(input)}\n                    />\n                    <Input title=\"Set A Password\" value={this.state.password} \n                        type=\"password\" className=\"req\" \n                        onChange={(input) => this.onChangePassword(input)}\n                    />\n                    <Button type=\"button\" className=\"button button-block\" title=\"Get Started\"\n                        onClick={() => this.onSignup()}\n                    ></Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignupView;\n","import React from 'react';\nimport LoginView from './login';\nimport SignupView from './signup';\nimport { useHistory } from 'react-router-dom';\n\nfunction TabContent(props) {\n\tlet history = useHistory();\n\tlog();\n\tfunction log() {\n\t\tif (props.logged === true) {\n\t\t\thistory.push('home');\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n    if (props.currentTab === 'signup') {\n    \treturn (\n            <SignupView signUp={props.signUp} />\n        );\n    }\n\n    return (\n        <LoginView logIn={props.logIn}/>\n    );\n}\n\nexport default TabContent;\n","import React from 'react';\nimport TabGroup from './tab-group';\nimport TabContent from './tab-content';\n\nclass BackGroundView extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttab: 'login',\n\t\t\tusers: [\n                {id: 1, firstName: 'Cong',lastName: 'Nguyen', email: 'cong@gmail.com', password: '1234'},\n            ],\n            logged: false\n\t\t}\n\t}\n\n\tchangeTab(newTab) {\n\t\tthis.setState({tab:newTab});\n\t}\n\n\tsignUp(user) {\n\t\tconsole.log(user);\n\t}\n\n\tlogIn(infor) {\n\t\tif (infor.email === 'cong@gmail.com' && infor.password === '123') {\n\t\t\tthis.setState({logged: true});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t        <div className=\"form\">\n\t            <TabGroup changeTab={(tab) => this.changeTab(tab)} currentTab={this.state.tab} />\n\t            <TabContent currentTab={this.state.tab} \n\t            \tsignUp={(user) => this.signUp(user)}\n\t            \tlogIn={(infor) => this.logIn(infor)}\n\t            \tlogged={this.state.logged}\n            \t/>\n\t        </div>\n\t    );\n\n\t}\n    \n}\n\nexport default BackGroundView;\n","import React from 'react';\nimport { Menu} from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nfunction SideBar(props) {\n\tlet history = useHistory();\n\n\tfunction changeContent(id, slug) {\n\t\thistory.push(slug);\n\t\tprops.selectItem(id);\n\t}\n\treturn (\n\t\t<Menu theme=\"dark\" mode={props.mode} selectedKeys={[props.selectedKey]}>\n\n\t\t\t{\n\t\t\t\tprops.sidebar.map((item) => {\n\t\t\t\t\treturn \t<Menu.Item key={item.id} \n\t\t\t\t\t\t\t\tonClick={() => changeContent(item.id, item.slug)} \n\t\t\t\t\t\t\t\ttitle={item.name}\n\t\t\t\t\t\t\t>\n  \t\t\t\t\t\t\t\t{item.name}\n        \t\t\t\t\t</Menu.Item>\n\t\t\t\t})\n\t\t\t}\n\t\t</Menu>\n\n\t);\n}\n\nexport default SideBar;\n","import React from 'react';\n\nclass Todo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\tTo do\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Todo;\n","import React from 'react';\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\tHome\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React from 'react';\n\nclass Profile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\tProfile\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Profile;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Layout, Menu} from 'antd';\nimport SideBar from './../sidebar/sidebar';\nimport LayoutContent from './content';\nimport Todo from './../page/todo-list';\nimport Home from './../page/home';\nimport Profile from './../page/profile';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst { Header, Sider, Content } = Layout;\nconst routes = [\n  {\n    path: \"/home\",\n    exact: true,\n    main: () => <Home />\n  },\n  {\n    path: \"/todo-list\",\n    main: () => <Todo />\n  },\n  {\n    path: \"/profile\",\n    main: () => <Profile />\n  }\n];\n\nclass Homepage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcollapsed: false,\n\t\t\tsidebar: [\n\t\t\t\t{id: 1, name: 'Home', slug: '/home'},\n\t\t\t\t{id: 2, name: 'Todo list', slug: '/todo-list'},\n\t\t\t\t{id: 3, name: 'Profile', slug: '/profile'},\n\t\t\t],\n\t\t\tselectedKey: '1'\n\t\t}\n\t}\n\n  \tonCollapse() {\n\t    this.setState({ \n\t    \tcollapsed: !this.state.collapsed \n\t    });\n  \t};\n\n  \tselectItem(key) {\n  \t\tthis.setState({\n        selectedKey: key.toString()\n      });\n  \t};\n\n  \trender() {\n    \treturn (\n        <Router>\n      \t\t<Layout style={{ minHeight: '100vh' }}>\n        \t\t<Sider collapsible collapsed={this.state.collapsed} onCollapse={() => this.onCollapse()}>\n        \t\t\t<SideBar mode=\"inline\" selectedKey={this.state.selectedKey} selectItem={(key) => this.selectItem(key)} sidebar={this.state.sidebar}/>\n        \t\t</Sider>\n        \t\t<Layout className=\"site-layout\">\n          \t\t\t<Header className=\"header\">\n\t\t\t\t      \t<div className=\"logo\" />\n\t\t\t\t      \t<SideBar mode=\"horizontal\" selectedKey={this.state.selectedKey} selectItem={(key) => this.selectItem(key)} sidebar={this.state.sidebar}/>\n\t\t\t\t    </Header>\n          \t\t\t<Content style={{ margin: '0 16px' }}>\n            \t\t\t<div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            \t\t\t   <Switch>\n                      {routes.map((route, index) => (\n                        <Route\n                          key={index}\n                          path={route.path}\n                          exact={route.exact}\n                          children={<route.main />}\n                        />\n                      ))}\n                    </Switch>\n            \t\t\t</div>\n          \t\t\t</Content>\n        \t\t</Layout>\n      \t\t</Layout>\n        </Router>\n    \t);\n  \t}\n}\nexport default Homepage;\n","import React from 'react';\nimport Todo from './../page/todo-list';\nimport Home from './../page/home';\nimport Profile from './../page/profile';\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nclass LayoutContent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\tswitch (this.props.currentContent) {\n\t\t\tcase '/profile':\n\t\t\t\treturn (<Profile />);\n\t\t\tcase '/todo-list':\n\t\t\t\treturn (<Todo />);\n\t\t\tdefault:\n\t\t\t\treturn (<Home />);\n\t\t}\n\t}\n}\n\nexport default LayoutContent;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute\n} from 'react-router-dom';\nimport BackGroundView from './../background';\nimport Homepage from './../homepage/homepage';\nimport Todo from './../page/todo-list';\nimport Profile from './../page/profile';\n\nclass RouterURL extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Route path=\"/\" exact component={BackGroundView}/>\n\t\t\t\t\t<Route path=\"/home\" exact component={Homepage}/>\n\t\t\t\t\t<Route />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default RouterURL;\n","import React from 'react';\r\nimport './form.scss';\r\nimport RouterURL from './routerURL/routeURL';\r\n\r\nclass App extends React.Component {\r\n  \trender() {\r\n    \treturn (\r\n    \t\t<RouterURL></RouterURL>\r\n    \t);\r\n  \t};\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}